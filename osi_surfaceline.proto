syntax = "proto2";

option optimize_for = SPEED;

import "osi_common.proto";
import "osi_lane.proto";
import "osi_logicallane.proto";

package osi3;

// A lane's surface line (as a list of segments).
//
// The surfaceline describes a height profile along the lane on or at a certain offset to the lane boundary.
// It is also intended to replace the centerline as a physical representation of the lane. The use of the 
// centerline for driving/steering inputs should rather be solved with a logical information, that is not 
// mandatory based on the true center of the lane.
//
// \image html OSI_LaneBoundaries_And_SurfaceLines.svg "Surfacelines" width=500px
//
// \note 
// sl: surface line
// lb: lane boundary
//
// \image html strassenquerschnitt_surfacelines.png "Lane shape surfacelines" width=500px
// 
// \attention The points desribing the surface line must be set in the 
// same ordering (ascending or descending) as the points desribing the 
// lane boundaries or lane. Example: If the points are deducted from 
// a map format, the order of points is recommended to be in line with the 
// road coordinate (e.g. s-coordinate in OpenDRIVE). 
//
// \attention The points describing the surface line might be set at
// arbitrary distances. This allowes to model certain height changes along the 
// lane like speed bumps etc. more detailed while still allow very few points 
// at parts of the lane where height does not change much.
//
// \note The surface line is the line that describes the height profile 
// along the lane. Multiple surface lines can be used to create a certain road shape
// if needed. 
// Up for discusssion: Should a flat road consist of no surface line, since the 
// lane boundaries can be used in this case. Other option would be a mandatory surfaceline
// at each LaneBoundary, in simple flat roads it will consist of just 2 points.
// 
// \attention If more than one surface line exists, they are not allowed to cross each other 
// or the lane boundaries, otherwise you could have conflicting height information at these points.
//

message SurfaceLine
{
    // The ID of the surface line.
    // Example: sl1 (see reference picture SurfaceLines).
    //
    // \note Note ID is global unique.
    //
    // \rules
    // is_globally_unique
    // \endrules
    //
    optional Identifier id = 1;
    
    // points making up the surfaceline
    // The surfaceline must be defined in the same direction as the 
    // lane or lane boundaries.
    //
    // If the surfaceline approximates a curve (e.g. a cubic function in
    // OpenDRIVE), the points must be chosen in a way that the lateral distance
    // to the ideal line does not exceed 5cm. As shown in the following image:
    //
    // \image html line_approximation_error.svg "Approximation error"
    // Approximation error green line.
    //
    // The Z error (difference in Z height between surfaceline and the "real"
    // line) must not exceed 2cm, since height gaps are more noticable.
    //
    repeated SurfaceLinePoint surfaceline = 2;
       
    // Definition of the placement of the newly introduced surfaceline in the center of the lane.
    //
    // Defined and used for driving lanes.
    // \c true means that the surface line is also the centerline of the lane4.
    //
    // Example: \c #surfaceline_is_centerline = \c true for surfaceline sl2
    // and \c #surfaceline_is_centerline = \c false for surfacelane sl1 in
    // image \ref HighwayExit .
    //
    // \note The \c #centerline is currently only defined for \c #type
    // = \c #TYPE_DRIVING .
    //
    optional bool surfaceline_is_centerline = 3;
        
    // ID of the surfaceline that is directly adjacent to the surfaceline on 
    // the left side (w.r.t. ascending order of surfaceline points
    // and lane boundary points). 
    //
    // \note If there is no left adjacent surface line, this will mean its located at the 
    // left LaneBoundary.
    // 
    // \proposal In order to model curb stones, one surface line will be placed at the lower edge
    // of the curb that belongs to the border lane/driving lane and another one on the upper edge
    // that will belong to the sidewalk 
    // (see https://github.com/OpenSimulationInterface/open-simulation-interface/pull/608)
    //
    optional Identifier left_adjacent_surfaceline_id = 4;
    
    // ID of the surfaceline that are directly adjacent to the
    // surfaceline on the right side (w.r.t. ascending order of surfaceline points
    // and lane boundary points). 
    //
    // \note If there is no right adjacent surface line, this will mean its located at the 
    // right LaneBoundary
    // 
    optional Identifier right_adjacent_surfaceline_id = 5;
    
    // \note Needs to be discussed if we reference the most left surfaceline
    // to the left LaneBoundary id or just state that it is at the boundary.
    //optional LaneBoundary.Identifier is_left_lane_boundary_id = 6;
    //optional LaneBoundary.Identifier is_right_lane_boundary_id = 7;
    
    message SurfaceLinePoint {
    
        // The position of the \c SurfaceLinePoint.
        //
        optional Vector3d position = 1;
    }
}
