syntax = "proto2";

option optimize_for = SPEED;

import "osi_common.proto";
import "osi_occupant.proto";
import "osi_detectedobject.proto";

package osi3;

//
// \brief A vehicle occupant as detected and perceived by an interior sensor.
//
message DetectedOccupant
{
    // Specific ID of the occupant as assigned by the sensor internally. Need
    // not match with \c #ground_truth_id.
    //
    optional Identifier tracking_id = 1;

    // The ID of the original vehicle occupant in the ground truth.
    //
    optional Identifier ground_truth_id = 2;

    // The occupant as detected by the sensor.
    //
    optional EstimatedOccupant occupant = 3;

    // The estimated probability that this occupant really exists, not
    // based on history.
    //
    // \note Use as confidence measure where a low value means less confidence
    // and a high value indicates strong confidence.
    //
    optional double existence_probability = 4;

    // A list of sensors which detected this detected entity.
    //
    // If SensorData has detected entities and all detections are missing, then
    // e.g. the number of sensors can confirm the existence_probability.
    //
    // \note This information can be determined via the detected entities'
    // detections ( \c ...Detection::object_id = 'this detected entity' ) and
    // the sensors (their IDs) to which these detections belong.
    //
    // \note OSI uses singular instead of plural for repeated field names.
    //
    repeated Identifier sensor_id = 5;

    //
    // \brief Candidates for a detected occupant as estimated by the sensor.
    //
    message EstimatedOccupant
    {
        // A list of candidates for this occupant as estimated by the
        // sensor.
        //
        // \note OSI uses singular instead of plural for repeated field names.
        //
        repeated CandidateOccupant candidate = 1;

        // The root mean squared error of the base parameters of the detected
        // occupant's geometry. \c Occupant::base has to be identical
        // for all \c #candidates occupants.
        //
        optional BaseStationary base_rmse = 2;

        //
        // \brief A candidate for a detected occupant as estimated by
        // the sensor.
        //
        message CandidateOccupant
        {
            // The detected vehicle occupant.
            //
            // \note IDs, which are referenced in this message, usually
            // reference to \c DetectedXXX::tracking_id IDs.
            //
            optional Occupant occupant = 1;

            // The estimated probability that this candidate is the true value.
            // The sum of all \c #probability must be one.
            //
            // Range: [0,1]
            //
            optional double probability = 2;

            // The amount of time that this detected object has been currently
            // observed/tracked.
            //
            // Unit: [s]
            optional double age = 3;

            // The measurement state.
            //
            optional MeasurementState measurement_state = 4;
        }
    }
}
